/* eslint-disable @typescript-eslint/no-explicit-any */

import dbConnect from "@/lib/dbConnect";
import PollModel from "@/models/poll";
import { AxiosError } from "axios";
export async function POST(request:Request){
    await dbConnect();


    try{
        const {pollId , optionId} = await request.json();   //we are passing optionId here so that we can increment that specific options's votes
                                                            //the number of times user hits the vote button, this backend api receives request with that optionId and the specific pole 
                                                            //now we will write the logic to increase the vote by one for the option with this specific optionId
                                                            //we had save option schema wih text(option names) and votes 


        const poll = await PollModel.findById(pollId);

        if(!poll){
            return Response.json({
                success:false,message:'Poll not found',
            },
        {status:404});
        }

        const now = new Date(); //for checking if the pole has expired or not

        if(now > poll.expiresAt){
            return Response.json({
                success:false,message:'Pole has expired'
            },
        {status:400});
        }
        
        const result = await PollModel.updateOne(             

            {_id:pollId,'options._id':optionId},           //go to object in the poll schema where _id is pollId and optionsId is optionId                                                            
            {$inc:{'options.$.votes':1}} as any            //update that optionId's votes to increment by 1
                                                            //optionId is in quotes because there exists a dot between the name so we are using '' to tell js taht it is a whole name and not to return us the id of a object like(object.id)
            );
        
            //_id is autogenerated by mongoose for each schema that a database has  

    if(result.modifiedCount === 0){                 //modifiedCount tells how many documents have been updated but the query
        return Response.json({
            success:false,message:'Unable to cast vote'
        },
    {status:404});

        }

    return Response.json(
      {
        success: true,
        message: 'Vote cast successfully',
      },
      { status: 200 }
    );
    }

    catch(err){
        const error = err as AxiosError<{ message: string }>;
        console.error('Some unexpected error occurred:',error);
        return Response.json(
      { success: false, message: 'Error casting vote' },
      { status: 500 }
    );
    }


}